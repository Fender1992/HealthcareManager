@page "/Account/manage-appointments"
@using HealthcareManager.Data
@using HealthcareManager.Data.Models
@using HealthcareManager.Repositories.AppointmentsRepository
@using Microsoft.EntityFrameworkCore
@inject AppointmentRepository _appointmentRepository

<AuthorizeView>
    <Authorized Context="authContext">
<h2>Appointments</h2>


<a href="/Account/new-appointment" class="button"> Add an Appointment
</a>

@if (appointments == null || !appointments.Any())
{
    <p><em>No appointments found....</em></p>
}
else
{
    <TelerikGrid Data="@appointments" Pageable="true" Sortable="true" FilterMode="@GridFilterMode.FilterMenu">
        <GridToolBarTemplate>
            <!-- Toolbar content, if needed -->
        </GridToolBarTemplate>
        <GridColumns>
            <GridColumn Filterable="true" Sortable="true" Field="Name" Title="Appointment" />
            <GridColumn Filterable="true" Sortable="true" Field="Description" Title="Appointment Purpose" />
            <GridColumn Filterable="true" Sortable="true" Field="Date" Title="Date" />
            <GridColumn Filterable="true" Sortable="true" Field="Time" Title="Time" />
        </GridColumns>
    </TelerikGrid>
}
    </Authorized>
</AuthorizeView>

@code {
    private List<AppointmentDTO> appointments { get; set; } = new List<AppointmentDTO>();

    protected override async Task OnInitializedAsync()
    {
        //var userId = authContext.User.Identity.Name;
        appointments = await _appointmentRepository.GetAllAsync();

    }

    // private void Navigate()
    // {
    //     Navigation.Refresh();
    // }

    // private void AddAppointment()
    // {
    //     Console.WriteLine("Button Clicked");
    //     Navigation.NavigateTo("/new-appointment");
    //     StateHasChanged();
    // }
}
